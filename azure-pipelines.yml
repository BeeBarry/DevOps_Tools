trigger:
  branches:
    include:
    - main
pool:
  vmImage: 'ubuntu-latest'
variables:
  dockerRegistryServiceConnection: 'ACR-Connection'
  imageRepository: 'devopstools'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  # Terraform-variabler
  terraformVersion: '1.3.0'
  terraformWorkingDirectory: '$(Build.SourcesDirectory)/terraform'
stages:
- stage: Build
  displayName: 'Bygg och Pusha Docker Image'
  jobs:
  - job: BuildJob
    displayName: 'Bygg och Pusha Docker Image'
    steps:
    - task: Docker@2
      displayName: 'Bygg och pusha Docker-image'
      inputs:
        command: 'buildAndPush'
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        dockerfile: '$(dockerfilePath)'
        tags: |
          $(tag)
          latest
- stage: Deploy
  displayName: 'Terraform Deployment'
  dependsOn: Build
  jobs:
  - job: TerraformJob
    displayName: 'Terraform Deployment'
    steps:
    - task: TerraformInstaller@0
      displayName: 'Installera Terraform'
      inputs:
        terraformVersion: '$(terraformVersion)'
    
    - task: TerraformTaskV3@3
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(terraformWorkingDirectory)'
        backendType: 'azurerm'
        backendServiceArm: 'Azure-Connection'
        backendAzureRmResourceGroupName: 'RG-barryolof'
        backendAzureRmStorageAccountName: 'tfstatebarryolof'  
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'devopstools.tfstate'
    
    - task: TerraformTaskV3@3
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(terraformWorkingDirectory)'
        environmentServiceNameAzureRM: 'Azure-Connection'
        commandOptions: ''
    
    - task: TerraformTaskV3@3
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(terraformWorkingDirectory)'
        environmentServiceNameAzureRM: 'Azure-Connection'
        commandOptions: '-auto-approve'