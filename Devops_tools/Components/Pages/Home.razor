@page "/"
@using Devops_tools.Models.DTOs
@using Devops_tools.Services.Interfaces
@using Devops_tools.Components.DevTools

<PageTitle>DevOps Tools</PageTitle>

<div class="container-fluid py-4">
    <h1 class="mb-5">DevOps Tools</h1>
    
    @if (categories == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        @foreach (var category in categories)
        {
            <CategorySection Category="category" Tools="GetToolsForCategory(category.Id)" />
        }
    }
</div>

@code {
    private List<CategoryDto>? categories;
    private List<ToolDto>? tools;
    
    // Inject services for data access
    [Inject]
    private ICategoryService CategoryService { get; set; } = default!;
    
    [Inject]
    private IToolService ToolService { get; set; } = default!;
    
    protected override async Task OnInitializedAsync()
    {
        // Load data from services
        categories = (await CategoryService.GetAllCategoriesAsync()).ToList();
        tools = (await ToolService.GetAllToolsAsync()).ToList();
    }
    
    private List<ToolDto> GetToolsForCategory(int categoryId)
    {
        return tools?.Where(t => t.CategoryId == categoryId).ToList() ?? new List<ToolDto>();
    }
}